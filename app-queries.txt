
./routes/booking-router.js
	.query(
	      `INSERT INTO booking VALUES (DEFAULT, $1, $2, $3, $4, $5, $6) RETURNING id`,
	.query(
	      `SELECT * FROM customer, booking
	      WHERE hotel_chain_name = $1
	      AND hotel_id = $2
	      AND customer.id = customer_id
	      AND END_DATE >= (now()::date)
	      ORDER BY start_date`,
	.query(
	      `SELECT hotel_chain_name, hotel_id, COUNT(id) AS num_bookings
	      FROM booking
	      WHERE hotel_chain_name = $1
	      AND END_DATE >= (now()::date)
	      GROUP BY (hotel_chain_name, hotel_id)`,
	.query(`
	      SELECT * FROM room
	      WHERE (hotel_chain_name, hotel_id, room_number) NOT IN ((
	          SELECT hotel_chain_name, hotel_id, room_number
	          FROM booking
	          WHERE (
	            $1 BETWEEN start_date AND end_date
	            OR $2 BETWEEN start_date AND end_date
	            OR start_date BETWEEN $1 AND $2
	            OR end_date BETWEEN $1 AND $2
	          )
	        ) UNION (
	          SELECT hotel_chain_name, hotel_id, room_number
	          FROM rental
	          WHERE (
	            $1 BETWEEN start_date AND end_date
	            OR $2 BETWEEN start_date AND end_date
	            OR start_date BETWEEN $1 AND $2
	            OR end_date BETWEEN $1 AND $2
	          )
	        )
	      )`,
	.query("SELECT name FROM hotel_chain"
	.query("SELECT DISTINCT city, country FROM hotel, address WHERE address.id = address_id"

./routes/calendar-router.js
	.query(
	      `SELECT
	        customer.given_name, customer.family_name, customer.registered_on,
	        hotel.address_id, address.*,
	        booking.*
	      FROM booking
	      JOIN customer
	        ON customer_id = customer.id
	      JOIN hotel
	        ON hotel.hotel_chain_name = booking.hotel_chain_name
	        AND hotel.id = booking.hotel_id
	      JOIN address
	        ON hotel.address_id = address.id`
	.query(
	      `SELECT
	        customer.given_name, customer.family_name, customer.registered_on,
	        hotel.address_id,
	        address.*,
	        rental.*
	      FROM rental
	      JOIN customer
	        ON customer_id = customer.id
	      JOIN hotel
	        ON hotel.hotel_chain_name = rental.hotel_chain_name
	        AND hotel.id = rental.hotel_id
	      JOIN address
	        ON hotel.address_id = address.id`

./routes/customer-router.js
	.query("SELECT * FROM address, customer WHERE address.id = address_id"
	.query(
	      `SELECT * FROM address, customer WHERE address.id = address_id AND customer.id = $1`,
	.query(
	        "INSERT INTO customer VALUES (DEFAULT, $1, $2, $3, $4, $5, $6) RETURNING id",
	.query(
	        `UPDATE customer
	         SET ssn = $1, sin = $2, given_name = $3, family_name = $4
	         WHERE id=$5 `,
	.query(
	      "SELECT address_id FROM customer WHERE id = $1",
	.query(`DELETE FROM customer WHERE id=$1`,
	.query(`DELETE FROM address WHERE id=$1`,

./routes/employee-router.js
	.query(`
	    SELECT employee.*, address.street_number, address.street_name, address.city, address.country
	    FROM employee, address
	    WHERE employee.address_id = address.id`
	.query(`SELECT * FROM employee_role`
	.query(
	      `SELECT address.*, employee_role.role as roles, employee.*
	      FROM employee, address, employee_role
	      WHERE employee.id = $1
	      and employee.address_id = address.id
	      and employee_id = $1`,
	.query("SELECT * FROM employee WHERE hotel_chain_name = $1",
	.query("SELECT address_id FROM employee WHERE id = $1",
	.query(`DELETE FROM employee WHERE id = $1`,
	.query(`DELETE FROM address WHERE id = $1`,

./routes/hotel-chain-router.js
	.query(
	      `SELECT *, hotel_chain.* from hotel_chain
	      JOIN address
	        ON address.id = main_office_address_id
	      LEFT JOIN (
	        SELECT hotel_chain_name, COUNT(id) as num_hotels FROM hotel GROUP BY hotel_chain_name
	      ) as n ON n.hotel_chain_name = hotel_chain.name`
	.query("SELECT * FROM hotel_chain_phone_number"
	.query("SELECT * FROM hotel_chain_email_address"
	.query(`(
	          SELECT main_office_address_id as address_id
	          FROM hotel_chain
	          WHERE name = $1
	        ) UNION (
	          SELECT address_id
	          FROM hotel
	          WHERE hotel_chain_name = $1
	      )`,
	.query(`DELETE FROM hotel_chain WHERE name = $1`,

./routes/hotel-router.js
	.query(
	      `SELECT *, hotel.* FROM
	      hotel
	      JOIN employee on employee.id = manager_id
	      JOIN address on address.id = hotel.address_id
	      LEFT JOIN capacity_by_hotel
	        ON hotel.id = capacity_by_hotel.hotel_id
	        AND hotel.hotel_chain_name = capacity_by_hotel.hotel_chain_name
	      WHERE hotel.hotel_chain_name = $1`,
	.query(
	      `SELECT * FROM hotel_phone_number
	      WHERE hotel_chain_name = $1`,
	.query(
	      `SELECT * FROM hotel_email_address
	      WHERE hotel_chain_name = $1`,
	.query("SELECT * FROM capacity_by_hotel"
	.query(
	        `INSERT INTO hotel VALUES (DEFAULT, $1, $2, $3, $4) RETURNING id`,
	.query(
	        `SELECT address_id FROM hotel WHERE hotel_chain_name = $1 AND id = $2`,
	.query(
	        `DELETE FROM hotel WHERE hotel_chain_name = $1 AND id = $2`,
	.query(
	        `DELETE FROM address WHERE id = $1`,

./routes/rental-router.js
	.query(
	      `INSERT INTO rental VALUES (DEFAULT, $1, $2, $3, $4, $5, $6, $7) RETURNING id`,
	.query(
	      `SELECT * FROM room
	      WHERE hotel_chain_name = $1 AND hotel_id = $2
	      AND room_number NOT IN ((
	          SELECT room_number FROM booking
	          WHERE hotel_chain_name = $1 AND hotel_id = $2
	          AND (
	            $3 BETWEEN start_date AND end_date
	            OR $4 BETWEEN start_date AND end_date
	            OR start_date BETWEEN $3 AND $4
	            OR end_date BETWEEN $3 AND $4
	          )
	        ) UNION (
	          SELECT room_number FROM rental
	          WHERE hotel_chain_name = $1 AND hotel_id = $2
	          AND (
	            $3 BETWEEN start_date AND end_date
	            OR $4 BETWEEN start_date AND end_date
	            OR start_date BETWEEN $3 AND $4
	            OR end_date BETWEEN $3 AND $4
	          )
	      ))`,
	.query("SELECT * FROM booking WHERE id = $1",
	.query(
	        `INSERT INTO rental VALUES (DEFAULT, $1, $2, $3, $4, $5, $6, $7)`,
	.query(`DELETE FROM booking WHERE id = $1`,

./routes/room-router.js
	.query(
	      `SELECT *
	      FROM room
	      WHERE hotel_chain_name = $1
	      AND room.hotel_id = $2
	      ORDER BY room_number`,
	.query(
	      `SELECT *
	      FROM room_damage
	      WHERE hotel_chain_name = $1
	      AND hotel_id = $2
	      ORDER BY room_number`,
	.query(
	      `SELECT *
	      FROM room_amenity
	      WHERE hotel_chain_name = $1
	      AND hotel_id = $2
	      ORDER BY room_number`,
	.query(
	      `SELECT * FROM room LEFT JOIN ((
	        SELECT damage, null AS amenity
	        FROM room_damage
	        WHERE hotel_chain_name = $1 AND hotel_id = $2 AND room_number = $3
	      ) UNION (
	        SELECT null as damage, amenity
	        FROM room_amenity
	        WHERE hotel_chain_name = $1 AND hotel_id = $2 AND room_number = $3
	      )) AS room_details ON True
	      WHERE hotel_chain_name = $1 AND hotel_id = $2 AND room_number = $3`,
	.query("SELECT * FROM ROOMS_BY_AREA"
	.query(
	      `DELETE FROM room
	      WHERE hotel_chain_name = $1
	      AND hotel_id = $2
	      AND room_number = $3`,
	.query(
	        `UPDATE room
	        SET price = $4, capacity = $5, scenery = $6, extendable = $7
	        WHERE hotel_chain_name = $1
	        AND hotel_id = $2
	        AND room_number = $3`,

./services/address-service.js
	.query("INSERT INTO address VALUES (DEFAULT, $1, $2, $3, $4) RETURNING id",
	.query(
	    `UPDATE address
	     SET street_number = $1, street_name = $2, city = $3, country = $4
	     WHERE id = $5`,
	.query(`DELETE FROM address WHERE id IN (${arguments.join(", ")})`,

./services/booking-service.js
	.query(
	    `(SELECT room_number FROM rental
	    WHERE hotel_chain_name = $1 AND hotel_id = $2 AND room_number = $3
	    AND (
	      $4 BETWEEN start_date AND end_date
	      OR $5 BETWEEN start_date AND end_date
	      OR start_date BETWEEN $4 AND $5
	      OR end_date BETWEEN $4 AND $5
	    )) UNION
	    (SELECT room_number FROM booking
	    WHERE hotel_chain_name = $1 AND hotel_id = $2 AND room_number = $3
	    AND (
	      $4 BETWEEN start_date AND end_date
	      OR $5 BETWEEN start_date AND end_date
	      OR start_date BETWEEN $4 AND $5
	      OR end_date BETWEEN $4 AND $5
	    ))`,

./services/employee-service.js
	.query(
	    `INSERT INTO employee_role VALUES ${arguments.join(", ")} ON CONFLICT DO NOTHING`,
	.query(
	    `DELETE FROM employee_role WHERE employee_id = $1 AND role NOT IN (${arguments.join(", ")})`,
	.query(
	      "INSERT INTO employee VALUES (DEFAULT, $1, $2, $3, $4, $5, $6) RETURNING id",
	.query(
	      `UPDATE employee
	       SET ssn = $1, sin = $2, given_name = $3, family_name = $4, hotel_chain_name = $5
	       WHERE id = $6`,

./services/hotel-service.js
	.query(
	    `SELECT *, (
	      SELECT COUNT(room_number) AS num_rooms FROM room WHERE room.hotel_id = hotel.id
	    ) FROM address, employee, hotel, capacity_by_hotel
	    WHERE address.id = hotel.address_id
	    AND employee.id = hotel.manager_id
	    AND capacity_by_hotel.hotel_chain_name = hotel.hotel_chain_name
	    AND capacity_by_hotel.hotel_id = hotel.id`
	.query(
	    `INSERT INTO hotel_phone_number
	    VALUES ${arguments.join(", ")}
	    ON CONFLICT DO NOTHING`,
	.query(
	    `INSERT INTO hotel_email_address
	    VALUES ${arguments.join(", ")}
	    ON CONFLICT DO NOTHING`,
	.query(
	      `DELETE FROM hotel_phone_number
	      WHERE hotel_chain_name = $1 AND hotel_id = $2`,
	.query(
	      `DELETE FROM hotel_phone_number
	      WHERE hotel_chain_name = $1 AND hotel_id = $2
	      AND phone_number NOT IN (${arguments})`,
	.query(
	      `DELETE FROM hotel_email_address
	      WHERE hotel_chain_name = $1 AND hotel_id = $2`,
	.query(
	      `DELETE FROM hotel_email_address
	      WHERE hotel_chain_name = $1 AND hotel_id = $2
	      AND email_address NOT IN (${arguments})`,
	.query(
	      `UPDATE hotel SET
	      manager_id = $3, category = $4
	      WHERE hotel_chain_name = $1 AND id = $2`,

./services/room-service.js
	.query(`INSERT INTO room_amenity VALUES ${arguments.join(", ")} ON CONFLICT DO NOTHING`,
	.query(`INSERT INTO room_damage VALUES ${arguments.join(", ")} ON CONFLICT DO NOTHING`,
	.query(
	      `DELETE FROM room_amenity
	      WHERE hotel_chain_name = $1 AND hotel_id = $2 AND room_number = $3`,
	.query(
	      `DELETE FROM room_amenity
	      WHERE hotel_chain_name = $1 AND hotel_id = $2 AND room_number = $3
	      AND amenity NOT IN (${deleteArguments.join(", ")})`,
	.query(
	      `DELETE FROM room_damage
	      WHERE hotel_chain_name = $1 AND hotel_id = $2 AND room_number = $3`,
	.query(
	      `DELETE FROM room_damage
	      WHERE hotel_chain_name = $1 AND hotel_id = $2 AND room_number = $3
	      AND damage NOT IN (${deleteArguments.join(", ")})`,
	.query(
	      `INSERT INTO room VALUES ($1, $2, $3, $4, $5, $6, $7)`,
	.query(
	    `SELECT * FROM room
	      WHERE hotel_chain_name = $1
	      AND hotel_id = $2
	      AND room_number = $3`,

./sql-scripts/insert-sample-data.js
	.query("INSERT INTO address VALUES (DEFAULT, $1, $2, $3, $4) RETURNING id",
	.query(
	      "INSERT INTO hotel_chain VALUES ($1, $2) RETURNING name",
	.query(
	        "INSERT INTO hotel_chain_phone_number VALUES ($1, $2)",
	.query(
	        "INSERT INTO hotel_chain_email_address VALUES ($1, $2)",
	.query(
	      "INSERT INTO employee VALUES (DEFAULT, $1, $2, $3, $4, $5, $6) RETURNING id",
	.query("INSERT INTO employee_role VALUES ($1, $2)",
	.query(
	      "INSERT INTO hotel VALUES (DEFAULT, $1, $2, $3, $4) RETURNING id",
	.query(
	        "INSERT INTO hotel_phone_number VALUES ($1, $2, $3)",
	.query(
	        "INSERT INTO hotel_email_address VALUES ($1, $2, $3)",
	.query(
	      "INSERT INTO room VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING room_number",
	.query(
	        "INSERT INTO room_damage VALUES ($1, $2, $3, $4)",
	.query(
	        "INSERT INTO room_amenity VALUES ($1, $2, $3, $4)",
	.query(
	      "INSERT INTO customer VALUES (DEFAULT, $1, $2, $3, $4, $5, $6) RETURNING id",
